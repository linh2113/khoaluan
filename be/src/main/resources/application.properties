# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# Database Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/techstore
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:admin}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false


# JWT Configuration : HS512
jwt.secret=${JWT_SECRET:BhdFp++FHu7jWopVw6x0tL0ntmvufd7wmvLsbMiGSu7c/CQe/ecyI9IHL49sdXDdUXdsp+HoTqDiUcNG3KsBbg==}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh-token.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}

# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:linhson208@gmail.com}
spring.mail.password=${MAIL_PASSWORD:towk gnyo yraf ohhh}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Frontend URL for email verification and password reset
app.frontend-url=${FRONTEND_URL:http://localhost:3000}   

# OAuth2 Configuration
# Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:66573799121-mtn3va166kro3k2d1e7p04iutm7i3i4o.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/v1/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=email,profile

# Facebook
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID:507670785164125}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET:a2afbd53526f1d2c0e686147d29b89d5}
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/api/v1/oauth2/callback/facebook
spring.security.oauth2.client.registration.facebook.scope=email,public_profile

# OAuth2 redirect URI (Backend endpoint)
app.oauth2.authorized-redirect-uri=http://localhost:8080/api/v1/auth/oauth2/redirect


# Logging Configuration
logging.level.root=WARN
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.com.ecommerce.techstore=DEBUG
logging.file.name=logs/techstore.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.upload.dir=${user.home}/techstore/uploads

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.configUrl=/api/v1/api-docs/swagger-config
springdoc.swagger-ui.url=/api/v1/api-docs

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin}
security.basic.enabled=false
security.ignored=/**

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized

cloudinary.cloud-name=dvxnipyk4
cloudinary.api-key=692147617982258
cloudinary.api-secret=hfXoMc2I3MMYYDPEBQ1Iw_8kJwI